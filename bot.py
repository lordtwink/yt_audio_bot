import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from downloader import download_audio, clean_temp
from config import TELEGRAM_BOT_TOKEN, TEMP_DIR

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /get <–Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ>, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ —Å YouTube."
    )

async def get_audio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = " ".join(context.args)
    if not query:
        await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.")
        return

    message = await update.message.reply_text("–ò—â—É –∏ —Å–∫–∞—á–∏–≤–∞—é –∞—É–¥–∏–æ...")
    try:
        file_path = download_audio(query)
        await update.message.reply_audio(open(file_path, 'rb'))
        clean_temp()  # —á–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        await message.edit_text("–ì–æ—Ç–æ–≤–æ! üéµ")
    except Exception as e:
        await message.edit_text(f"–û—à–∏–±–∫–∞: {e}")

def main():
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("get", get_audio))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
